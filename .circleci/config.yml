################################################################################
# OPEN SOURCE MODULE
# Remove the comment if you changed the build scripts!
################################################################################

version: 2

x-environment: &environment
  GIT_AUTHOR_EMAIL: com.git@sealsystems.de
  GIT_AUTHOR_NAME: CircleCI Build
  GIT_COMMITTER_EMAIL: com.git@sealsystems.de
  GIT_COMMITTER_NAME: CircleCI Build
  LOG_LEVELS: fatal

jobs:
  test:
    docker:
      - image: circleci/node:10

    environment:
      <<: *environment

    steps:
      - checkout
      - run: &configure-node-js
          name: Configure Node.js
          command: |
            curl -k -u "${JFROG_CREDENTIALS}" "https://plossys.jfrog.io/plossys/api/npm/auth" > ~/.npmrc
            npm config set registry http://plossys.jfrog.io/plossys/api/npm/npm-repo
            node --version
      - restore_cache: &restore-cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run: &install-dependencies
          name: Install dependencies
          command: |
            if [ ! -d ./node_modules ]; then
              npm install
            fi
      - save_cache: &save-cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      # - setup_remote_docker
      # - run: &docker-login
      # name: Configure Docker repository
      # command: |
      # Do not show output to prevent password leaks
      # docker login -u ${DOCKERHUB_CREDENTIALS%%:*} -p ${DOCKERHUB_CREDENTIALS#*:} >/dev/null 2>&1
      # - run:
      # name: Run tests
      # command: npm run test
      # - run:
      # name: Run code coverage
      # command: npm run test:coverage
      # - store_artifacts:
      # path: coverage/lcov-report
      # destination: coverage

  release:
    docker:
      - image: 'circleci/node:10'

    environment:
      <<: *environment

    steps:
      - checkout
      - run:
          <<: *configure-node-js
      - restore_cache:
          <<: *restore-cache
      - run:
          <<: *install-dependencies
      - save_cache:
          <<: *save-cache
      - run:
          name: Trigger release
          command: npm run release

workflows:
  version: 2

  # Run only on feature branches, not on master or bugfix branches
  test:
    jobs:
      - test:
          filters: &no-release-branch
            branches:
              ignore:
                - master
                # bugfix banches (e.g. 1.2.x)
                - /\d+\.\d+\.x/

  # Run only on master or bugfix branches
  test-and-release:
    jobs:
      - test:
          filters: &only-release-branch
            branches:
              only:
                - master
                # bugfix release banches (e.g. 1.2.x)
                - /\d+\.\d+\.x/
      - release:
          filters:
            <<: *only-release-branch
          requires:
            - test
